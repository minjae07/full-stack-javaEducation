package kr.or.shi.algorithm;

/*
 * 02. 정렬된 수에서 하나의 수의 위치를 찾기
 * 		1)문제 정의
 * 			- 여러 개의 수가 정렬된 순서로 있을 때 특정한 수를 찾는 방법
 * 			- 단순 반복문을 이용하면 수의 개수에 따라 비교 횟수가 증가하는 0(n)의 수행이 이루어짐
 * 			- 수가 정렬된 상태에서는 이진 탐색(binary search)을 활용하면 매번 비교되는 요소의 수가 절반으로 감소될 수 있으므로
 * 				있으므로 0(logN)의 수행으로 원하는 수를 찾을 수 있음.
 * 			- 수의 예 : [12,25,31,37,54,66,77,88,99,108]
 * 			- 88의 위치를 찾아보세요. =>찾는 수는 8번째 있습니다.
 * 			- 59의 위치를 찾아보세요. =>찾는 수는 없습니다.
 * 
 * 		2)힌트
 * 			- 수가 정렬된 상태에므로 중간의 값을 하나 선택한다.
 * 			- 찾으려는 값이 그보다 크면 범위를 오른쪽으로
 * 						그보다 작므녕 범위를 왼쪽으로 좁힐 수 있다.
 * 			- 한번 비교할 때마다 1/2씩 범위가 좁혀진다.
 * 
 */
public class BinarySearchProblemTest {

	public static void main(String[] args) {
	

	}

}
