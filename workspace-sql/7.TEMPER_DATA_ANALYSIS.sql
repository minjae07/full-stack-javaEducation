--05. 역사상 일교차가 가장 큰 일자 구하시오.
-- 역사상 서울시를 기준으로 일교차가 가장 큰 날과 해당 일의 일교차 값, 최저온도, 최고 온도를 구하시오.

/*
    * IS NULL 연산자
        1) 특정 컬럼 혹은 값이 널 값인지 아닌지를 판단하는 연산자이다.
        2) IS NULL 혹은 IS NOT NULL로 널 유무를 판단하다.
        
    * IS NULL 문법
    SELECT *
        FROM TABLE_NAME
     WHERE COLUMN_NAME
        IS NULL;                            --COLUMN_NAME 컬럼의 값이 널인 집합을 출력한다.
        
    SELECT *
        FROM TABLE_NAME
     WHERE COLUMN_NAME
        IS NOT NULL;                            --COLUMN_NAME 컬럼의 값이 널이 아닌 집합을 출력한다.        
    
*/
CREATE TABLE CONTACTS
(
      ID  NUMBER(2)   GENERATED BY DEFAULT AS IDENTITY 
    , FIRST_NAME   VARCHAR2(50) NOT NULL
    , LAST_NAME    VARCHAR2(50) NOT NULL
    , EMAIL        VARCHAR2(255) NOT NULL
    , PHONE        VARCHAR2(15)
);

INSERT 
    INTO
        contacts(FIRST_NAME, LAST_NAME, EMAIL, PHONE)
    VALUES
        ('John', 'Doe', 'john@dcu.com', null);

INSERT 
    INTO
        contacts(FIRST_NAME, LAST_NAME, EMAIL, PHONE)
    VALUES
        ('Lily', 'Bush', 'lily.bush@dcu.com', '(010-2345-2312)');
commit;

select
    *
from
    contacts;
----------------------------------------------------------------------------
select
      id
    , first_name
    , last_name
    , email
    , phone
from 
    contacts
where phone = null;                     -- phone컬럼의 값이 null인 집합을 출력하고자 한다.
-- 결과집합이 공집합이다. 널은 '='연산으로 비교할수 없다.
-----------------------------------------------------------------------------

select
      id
    , first_name
    , last_name
    , email
    , phone
from 
    contacts
where phone is null;                   -- phone컬럼의 값이 null인 집합을 출력하고자 한다.
-- 정상적으로 결과집합이 출력되었다.
-- null인 집합을 출력하려면 is null 연산자를 사용한다.
-----------------------------------------------------------------------------
select
      id
    , first_name
    , last_name
    , email
    , phone
from 
    contacts
where phone is not null;               -- phone컬럼의 값이 not null인 집합을 출력하고자 한다.
-- 정상적으로 결과집합이 출력되었다.
-- null이 아닌 집합을 출력하려면 is not null 연산자를 사용한다.












